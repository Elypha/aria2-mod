diff --git a/src/DownloadCommand.cc b/src/DownloadCommand.cc
index 2db41e46..f49eb807 100644
--- a/src/DownloadCommand.cc
+++ b/src/DownloadCommand.cc
@@ -306,7 +306,7 @@ void DownloadCommand::checkLowestDownloadSpeed() const
           startupIdleTime_) {
     int nowSpeed = peerStat_->calculateDownloadSpeed();
     if (nowSpeed <= lowestDownloadSpeedLimit_) {
-      throw DL_ABORT_EX2(fmt(EX_TOO_SLOW_DOWNLOAD_SPEED, nowSpeed,
+      throw DL_RETRY_EX2(fmt(EX_TOO_SLOW_DOWNLOAD_SPEED, nowSpeed,
                              lowestDownloadSpeedLimit_,
                              getRequest()->getHost().c_str()),
                          error_code::TOO_SLOW_DOWNLOAD_SPEED);
diff --git a/src/SocketBuffer.cc b/src/SocketBuffer.cc
index 62862fff..3e322d7d 100644
--- a/src/SocketBuffer.cc
+++ b/src/SocketBuffer.cc
@@ -38,6 +38,7 @@
 #include <algorithm>
 
 #include "SocketCore.h"
+#include "DlRetryEx.h"
 #include "DlAbortEx.h"
 #include "message.h"
 #include "fmt.h"
@@ -158,7 +159,7 @@ ssize_t SocketBuffer::send()
     }
     ssize_t slen = socket_->writeVector(iov, num);
     if (slen == 0 && !socket_->wantRead() && !socket_->wantWrite()) {
-      throw DL_ABORT_EX(fmt(EX_SOCKET_SEND, "Connection closed."));
+      throw DL_RETRY_EX(fmt(EX_SOCKET_SEND, "Connection closed."));
     }
     // A2_LOG_NOTICE(fmt("num=%zu, amount=%d, bufq.size()=%zu, SEND=%d",
     //                   num, amount, bufq_.size(), slen));
diff --git a/src/SocketCore.cc b/src/SocketCore.cc
index e235f512..ab42ba7f 100644
--- a/src/SocketCore.cc
+++ b/src/SocketCore.cc
@@ -1015,7 +1015,7 @@ bool SocketCore::tlsHandshake(TLSContext* tlsctx, const std::string& hostname)
 
     if (rv == TLS_ERR_ERROR) {
       // Damn those error.
-      throw DL_ABORT_EX(fmt("SSL/TLS handshake failure: %s",
+      throw DL_RETRY_EX(fmt("SSL/TLS handshake failure: %s",
                             handshakeError.empty()
                                 ? tlsSession_->getLastErrorString().c_str()
                                 : handshakeError.c_str()));
